---
# Source: cardano/templates/producer-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "RELEASE-NAME-cardano-producer"
  labels:
    app.kubernetes.io/component: producer
    helm.sh/chart: cardano-0.1.3
    app.kubernetes.io/name: cardano
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.30.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  serviceName: RELEASE-NAME-cardano-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: producer
      app.kubernetes.io/name: cardano
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      annotations:
        checksum/testnet: 307b3a64965d2b5c79ec73eaf72154d8ddae59fe965a2ad42c906d41245d6cb5
        prometheus.io/port: "12789"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/component: producer
        app.kubernetes.io/name: cardano
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      serviceAccountName: RELEASE-NAME-cardano
      securityContext: {}  # fsGroup doesnt solve the use cas where you need to set readOnly permission on some file
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: cardano
                    app.kubernetes.io/instance: RELEASE-NAME
                    app.kubernetes.io/component: producer
                namespaces:
                  - "ixp"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      terminationGracePeriodSeconds: 30

      initContainers:
        - name: genesis
          securityContext:
            {}
          image: "busybox:1.30.1"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args:
            - cp /config/*-genesis.json.gz /genesis ;
              gunzip /genesis/*.gz ;
              cp /config/config.json /genesis ;
              cp /config/producer-topology.json /genesis/topology.json ;
          volumeMounts:
            - name: genesis
              mountPath: /genesis
            - name: config
              mountPath: /config
              readOnly: true

      containers:
        - name: node
          securityContext:
            {}
          image: "inputoutput/cardano-node:1.33.0"
          imagePullPolicy: IfNotPresent
          args:
            - run
            - --config /config/config.json
            - --topology /config/topology.json
            - --database-path /data/db
            - --host-addr 0.0.0.0
            - --port 3001
            - --socket-path /ipc/node.socket
            - --shelley-kes-key /vault/kesSkey
            - --shelley-vrf-key /vault/vrfSkey
            - --shelley-operational-certificate /vault/nodeCert
          volumeMounts:
            - name: readiness-probe
              mountPath: /opt/readiness.sh
              subPath: readiness.sh
            - name: node-ipc
              mountPath: /ipc
            - name: genesis
              mountPath: /config
              readOnly: true
            - name: root-owned-vault
              mountPath: /vault
              readOnly: true
            - name: data
              mountPath: /data
              subPath: 
          ports:
            - name: node
              containerPort: 3001
              protocol: TCP
            - name: metrics
              containerPort: 12789
              protocol: TCP
          env:
          - name: "CARDANO_NODE_SOCKET_PATH"
            value: /ipc/node.socket
          startupProbe:
            tcpSocket:
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 360
          livenessProbe:
            tcpSocket:
              port: 3001
            initialDelaySeconds: 120
            periodSeconds: 60
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 1
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - bash /opt/readiness.sh
          resources:
            limits:
              cpu: "1"
              memory: 2048Mi
            requests:
              cpu: 100m
              memory: 512Mi

      volumes:
        - name: root-owned-vault
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: RELEASE-NAME-cardano-spc-hot
            nodePublishSecretRef:                       # Only required when using service principal mode
              name: secrets-store-creds                 # Only required when using service principal mode. The name of the Kubernetes secret that contains the service principal credentials to access keyvault.
        - name: vault
          emptyDir:
            medium: Memory
        - name: readiness-probe
          configMap:
            name: RELEASE-NAME-cardano-configmap-testnet
        - name: genesis
          emptyDir: {}
        - name: node-ipc
          emptyDir: {}
        - name: config
          configMap:
            name: RELEASE-NAME-cardano-configmap-testnet
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
